{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst foodsStore = createSlice({\n  name: \"foods\",\n  initialState: {\n    foodsList: [],\n    activeIndex: 0,\n    cartList: []\n  },\n  reducers: {\n    setFoodList(state, action) {\n      state.foodsList = action.payload;\n    },\n    changeActiveIndex(state, action) {\n      state.activeIndex = action.payload;\n    },\n    addCart(state, action) {\n      const item = state.cartList.find(item => item.id === action.payload.id);\n      if (item) {\n        item.count++;\n      } else {\n        state.cartList.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n    }\n  }\n});\nconst {\n  setFoodList,\n  changeActiveIndex,\n  addCart\n} = foodsStore.actions;\nconst fetchFoodsList = () => {\n  return async dispatch => {\n    try {\n      const res = await axios.get(\"http://localhost:3004/takeaway\");\n      dispatch(setFoodList(res.data));\n    } catch (error) {\n      console.error(\"Failed to fetch foods list:\", error);\n    }\n  };\n};\nexport { fetchFoodsList, changeActiveIndex, addCart };\nconst reducers = foodsStore.reducer;\nexport default reducers;","map":{"version":3,"names":["createSlice","axios","foodsStore","name","initialState","foodsList","activeIndex","cartList","reducers","setFoodList","state","action","payload","changeActiveIndex","addCart","item","find","id","count","push","actions","fetchFoodsList","dispatch","res","get","data","error","console","reducer"],"sources":["/Users/yangli/learning/redux-meituan/src/store/modules/takeaway.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst foodsStore = createSlice({\n  name: \"foods\",\n  initialState: {\n    foodsList: [],\n    activeIndex: 0,\n    cartList: [],\n  },\n  reducers: {\n    setFoodList(state, action) {\n      state.foodsList = action.payload;\n    },\n    changeActiveIndex(state, action) {\n      state.activeIndex = action.payload;\n    },\n    addCart(state, action) {\n      const item = state.cartList.find((item) => item.id === action.payload.id);\n      if (item) {\n        item.count++;\n      } else {\n        state.cartList.push({ ...action.payload, count: 1 });\n      }\n    },\n  },\n});\n\nconst { setFoodList, changeActiveIndex, addCart } = foodsStore.actions;\n\nconst fetchFoodsList = () => {\n  return async (dispatch) => {\n    try {\n      const res = await axios.get(\"http://localhost:3004/takeaway\");\n      dispatch(setFoodList(res.data));\n    } catch (error) {\n      console.error(\"Failed to fetch foods list:\", error);\n    }\n  };\n};\n\nexport { fetchFoodsList, changeActiveIndex, addCart };\nconst reducers = foodsStore.reducer;\nexport default reducers;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;IAClC,CAAC;IACDC,iBAAiB,CAACH,KAAK,EAAEC,MAAM,EAAE;MAC/BD,KAAK,CAACJ,WAAW,GAAGK,MAAM,CAACC,OAAO;IACpC,CAAC;IACDE,OAAO,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMI,IAAI,GAAGL,KAAK,CAACH,QAAQ,CAACS,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,CAAC;MACzE,IAAIF,IAAI,EAAE;QACRA,IAAI,CAACG,KAAK,EAAE;MACd,CAAC,MAAM;QACLR,KAAK,CAACH,QAAQ,CAACY,IAAI,CAAC;UAAE,GAAGR,MAAM,CAACC,OAAO;UAAEM,KAAK,EAAE;QAAE,CAAC,CAAC;MACtD;IACF;EACF;AACF,CAAC,CAAC;AAEF,MAAM;EAAET,WAAW;EAAEI,iBAAiB;EAAEC;AAAQ,CAAC,GAAGZ,UAAU,CAACkB,OAAO;AAEtE,MAAMC,cAAc,GAAG,MAAM;EAC3B,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,gCAAgC,CAAC;MAC7DF,QAAQ,CAACb,WAAW,CAACc,GAAG,CAACE,IAAI,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;AACH,CAAC;AAED,SAASL,cAAc,EAAER,iBAAiB,EAAEC,OAAO;AACnD,MAAMN,QAAQ,GAAGN,UAAU,CAAC0B,OAAO;AACnC,eAAepB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}